# -- WebGoat.NET Vulnerable .net application --
#
# Example Veracode Scan in Azure Pipelines
# The pipeline will perform SCA + SAST Policy Scan on the Main branch
# Scan Results and Findings are imported into Azure DevOps Boards

trigger:
  branches:
    include: [main]

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/WebGoat/bin'
    IncludeRootFolder: true
    archiveType: zip
    archiveFile: '$(Build.ArtifactStagingDirectory)/bin.zip'
    replaceExistingArchive: true
    verbose: true

- task: PowerShell@2
  displayName: Veracode SCA 
  env:
    SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)
    https_proxy: 'http://159.65.88.48:8080'
    SRCCLR_REGION: ER
  inputs:
    targetType: 'inline'
    script: |
      $Client = New-Object -TypeName System.Net.WebClient
      $Client.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials
      $Script = $Client.DownloadString('https://download.sourceclear.com/ci.ps1')
      Invoke-Command -ScriptBlock ([scriptblock]::Create($Script)) -ArgumentList @('scan', '--debug')


- task: Veracode@3
  displayName: Veracode Policy Scan
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'veracode_scan'
    veracodeAppProfile: 'WebGoat.new'
    version: '$(Build.BuildId)'
    filepath: '$(build.artifactstagingdirectory)/bin.zip'
    createProfile: true
    importResults: true
    maximumWaitTime: '45'
    failBuildOnPolicyFail: true
    optargs: '-criticality medium'
  
- task: Veracode Flaw Importer@3
  displayName: Veracode Import Scan Findings
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'veracode_scan'
    veracodeAppProfile: 'WebGoat.net'
    sandboxName: 
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Issue'
    area: '$(system.teamProject)'
    flawImportLimit: '1000'

- task: GithubRelease@0
  displayName: ‘Create GitHub Release’
  inputs:
    githubConnection: wasptree
    repositoryName: wasptree/WebGoat.NET
    action: 'create'
    tagSource: 'manual'
    tag: '$(Build.BuildNumber)'
    assets: '$(Build.ArtifactStagingDirectory)\bin.zip'
    assetUploadMode: delete

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
